{{- if .Values.dagsPersistence.enabled }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "airflow.fullname" . }}-nfs-dags
  labels:
{{ include "airflow.labels" . | indent 4 }}  
spec:
  storageClassName: {{ .Values.dagsPersistence.storageClassName | quote }}
  accessModes:
  - "ReadWriteOnce"
  resources:
    requests:
      storage: {{ .Values.dagsPersistence.capacity | quote }}
  volumeMode: Filesystem

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "airflow.fullname" . }}-dags-server
  labels:
{{ include "airflow.labels" . | indent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "dags-server"
      # app.kubernetes.io/name: {{ include "airflow.name" . }}
      # app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: "dags-server"
        # app.kubernetes.io/name: {{ include "airflow.name" . }}
        # app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.nfs.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.nfs.image.repository }}:{{ .Values.nfs.image.tag  }}"
        imagePullPolicy: {{ .Values.nfs.image.pullPolicy }}
        ports:
        - containerPort: 2049
          name: nfs
          protocol: TCP
        - containerPort: 20048
          name: mountd
          protocol: TCP
        - containerPort: 111
          name: rpcbind
          protocol: TCP
        securityContext:
          privileged: true
        volumeMounts:
        - name: nfs
          mountPath: /exports
        resources:
          {{- toYaml .Values.nfs.resources | trim | nindent 12 }}
      {{- with .Values.nfs.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nfs.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nfs.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: nfs
        persistentVolumeClaim:
          claimName: {{ include "airflow.fullname" . }}-nfs-dags

---

apiVersion: v1
kind: Service
metadata:
  name: {{ include "airflow.fullname" . }}-dags-server
  labels:
{{ include "airflow.labels" . | indent 4 }}
  annotations:
  {{- if .Values.nfs.service.annotations }}
{{ toYaml .Values.nfs.service.annotations | trim | indent 4 }}
  {{- end }}
spec:
  type: ClusterIP
  selector:
    app: "dags-server"
    # app.kubernetes.io/name: {{ include "airflow.name" . }}
    # app.kubernetes.io/instance: {{ .Release.Name }}
  ports:
  - name: nfs
    port: 2049
    protocol: TCP
    targetPort: 2049
  - name: mountd
    port: 20048
    protocol: TCP
    targetPort: 20048
  - name: rpc-bind
    port: 111
    protocol: TCP
    targetPort: 111

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ include "airflow.fullname" . }}-dags
  labels:
{{ include "airflow.labels" . | indent 4 }}
spec:
  accessModes:
  - "ReadWriteMany"
  capacity:
    storage: {{ .Values.dagsPersistence.capacity | quote }}
  nfs:
    path: /exports
    server: {{ include "airflow.fullname" . }}-dags-server.{{ .Release.Namespace }}.svc.cluster.local
  persistentVolumeReclaimPolicy: Retain
  volumeMode: Filesystem

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "airflow.fullname" . }}-dags
  labels:
{{ include "airflow.labels" . | indent 4 }}  
spec:
  storageClassName: "" 
  accessModes:
  - "ReadWriteMany"
  resources:
    requests:
      storage: {{ .Values.dagsPersistence.capacity | quote }}
  volumeMode: Filesystem
  volumeName: {{ include "airflow.fullname" . }}-dags
{{- end }}
